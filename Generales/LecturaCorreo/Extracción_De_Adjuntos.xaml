<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_projectFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1024.8,8741.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="El bot va a leer todos los mensajes que encuentre en la carpeta indicada en la tarea &quot;Obtener mensajes de correo&quot;.&#xA;&#xA;Posteriormente por cada uno de los mensajes va a guardar todos los adjuntos de manera temporal para poder trabajar con ellos y hacer el respectivo analisis y clasificacion. Ademas cuando el bot encuentre un archivo ZIP este se guardara en una carpeta aparte para ser procesado posteriormente. (Sin enbargo es casi una copia del codigo que analiza los archivos del correo, con unos cambios).&#xA;&#xA;Por ultimo el bot realiza un ciclo por cada archivo ZIP que se encuentre en unca carpeta de ZIPs, y se realiza el mismo analisis que en el caso del correo pero con algunos cambios propio del ZIP, como es la extraccion misma (Si se llega a cambiar algo del analisis hay que cambiarlo en ambos lados)." DisplayName="ExtraccionDeAdjuntos" sap:VirtualizedContainerService.HintSize="1035.2,8676.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="MailMessages" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="i" />
      <Variable x:TypeArguments="x:Int32" Name="countXLMs" />
      <Variable x:TypeArguments="x:Int32" Name="countPDFs" />
      <Variable x:TypeArguments="x:String" Name="xmlValidName" />
      <Variable x:TypeArguments="x:String" Name="filesDestinationFolder" />
      <Variable x:TypeArguments="x:Boolean" Name="findValidXML" />
      <Variable x:TypeArguments="x:Boolean" Name="isCorrectPDF" />
      <Variable x:TypeArguments="x:String" Name="xmlReceptorID" />
      <Variable x:TypeArguments="x:String" Name="xmlDocType" />
      <Variable x:TypeArguments="x:String" Name="projectFilePath" />
      <Variable x:TypeArguments="x:Boolean" Name="FolderExists" />
      <Variable x:TypeArguments="x:String" Name="ValidXMLPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="993.6,60" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[projectFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_projectFilePath]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Create C: Folers" sap:VirtualizedContainerService.HintSize="993.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_62">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_7" Path="[&quot;C:\&quot; +projectFilePath.Replace(&quot;\&quot;, &quot;&quot;)]" PathType="Folder" />
      <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_52">
        <If.Then>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_7" Path="[&quot;C:\&quot; +projectFilePath.Replace(&quot;\&quot;, &quot;&quot;)]" />
        </If.Then>
      </If>
      <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_8" Path="[&quot;C:\&quot; +projectFilePath + &quot;XML&quot;]" PathType="Folder" />
      <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_53">
        <If.Then>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_8" Path="[&quot;C:\&quot; +projectFilePath + &quot;XML&quot;]" />
        </If.Then>
      </If>
      <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_9" Path="[&quot;C:\&quot; +projectFilePath + &quot;PDF&quot;]" PathType="Folder" />
      <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_54">
        <If.Then>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_9" Path="[&quot;C:\&quot; +projectFilePath + &quot;PDF&quot;]" />
        </If.Then>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Limpiar al principio de la corrida las carpetas donde se almacenan los archivos de manera temporal para el analisis y clasificacion." DisplayName="CleanFoldersSequence" sap:VirtualizedContainerService.HintSize="993.6,160.8" sap2010:WorkflowViewState.IdRef="Sequence_59">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[projectFilePath.Replace(&quot;\&quot;, &quot;&quot;)]" PathType="Folder" />
      <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_46">
        <If.Then>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[projectFilePath.Replace(&quot;\&quot;, &quot;&quot;)]" />
        </If.Then>
      </If>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Elminar aquellos archivos que no son parte del proceso. En ...\ArchivosBot1\" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="483.2,352" sap2010:WorkflowViewState.IdRef="ForEach`1_26" Values="[Directory.getFiles(projectFilePath,&quot;*&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="324.8,173.6" sap2010:WorkflowViewState.IdRef="Sequence_58">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="Delete_7" Path="[file.ToString()]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_17" Path="[projectFilePath + &quot;XML&quot;]" PathType="Folder" />
      <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_66">
        <If.Then>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_17" Path="[projectFilePath +&quot;XML&quot;]" />
        </If.Then>
      </If>
      <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_18" Path="[projectFilePath + &quot;PDF&quot;]" PathType="Folder" />
      <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_67">
        <If.Then>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_18" Path="[projectFilePath +&quot;PDF&quot;]" />
        </If.Then>
      </If>
      <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[projectFilePath + &quot;ZIP&quot;]" PathType="Folder" />
      <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_47">
        <If.Then>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[projectFilePath +&quot;ZIP&quot;]" />
        </If.Then>
      </If>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Elminar aquellos archivos que no son parte del proceso. ...\ArchivosBot1\ZIP\" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="483.2,352" sap2010:WorkflowViewState.IdRef="ForEach`1_24" Values="[Directory.getFiles(projectFilePath+&quot;ZIP\&quot;,&quot;*&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="324.8,173.6" sap2010:WorkflowViewState.IdRef="Sequence_56">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[file.ToString()]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[projectFilePath + &quot;ZIP\Extraido&quot;]" PathType="Folder" />
      <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_48">
        <If.Then>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[projectFilePath + &quot;ZIP\Extraido&quot;]" />
        </If.Then>
      </If>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Elminar aquellos archivos que no son parte del proceso. En ...\ArchivosBot1\ZIP\Extraido\" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="483.2,352" sap2010:WorkflowViewState.IdRef="ForEach`1_25" Values="[Directory.getFiles(projectFilePath+&quot;ZIP\Extraido\&quot;,&quot;*&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="324.8,173.6" sap2010:WorkflowViewState.IdRef="Sequence_57">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="Delete_6" Path="[file.ToString()]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
    <ui:GetOutlookMailMessages Filter="{x:Null}" Account="cxp@aimi.cr" DisplayName="Obtener mensajes de correo de Outlook" GetAttachements="False" sap:VirtualizedContainerService.HintSize="993.6,22.4" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MailFolder="Bandeja de entrada" MarkAsRead="True" Messages="[MailMessages]" OnlyUnreadMessages="True" TimeoutMS="999999999" Top="999999999" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="993.6,193.6" sap2010:WorkflowViewState.IdRef="CommentOut_10">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,115.2" sap2010:WorkflowViewState.IdRef="Sequence_66">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetOutlookMailMessages Filter="{x:Null}" Account="cxp@aimi.cr" DisplayName="Obtener mensajes de correo de Outlook" GetAttachements="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_3" MailFolder="Inbox Pruebas" MarkAsRead="True" Messages="[MailMessages]" OnlyUnreadMessages="True" TimeoutMS="999999999" Top="999999999" />
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For each para recorrer cada email" DisplayName="For each email" sap:VirtualizedContainerService.HintSize="993.6,4499.2" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[MailMessages]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="950.4,4333.6" sap2010:WorkflowViewState.IdRef="Sequence_32">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="908.8,4240.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Reset Counter of XLM to 0" sap:VirtualizedContainerService.HintSize="867.2,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[countXLMs]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Reset Counter of PDF to 0" sap:VirtualizedContainerService.HintSize="867.2,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[countPDFs]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
              <If sap2010:Annotation.AnnotationText="SI hay un attachment o mas el correo va continuar el proceso.&#xA;&#xA;SI NO el correo se pasa por alto." Condition="[item.Attachments.Count &gt;0]" sap:VirtualizedContainerService.HintSize="867.2,3948" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then Sequence" sap:VirtualizedContainerService.HintSize="832,3708.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEach x:TypeArguments="snm:Attachment" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="To save first all the .ZIP files and count XLMs and PDFs files. (Te ZIP files will be processed at the end.)&#xA;" DisplayName="For each attachment" sap:VirtualizedContainerService.HintSize="790.4,144.8" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[item.Attachments]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="snm:Attachment">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="snm:Attachment" Name="attachment" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1425" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:GenericValue" Name="fileName" />
                              <Variable x:TypeArguments="ui:GenericValue" Name="fileExtn" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:GenericValue">[fileName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:GenericValue">[attachment.Name]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:GenericValue">[fileExtn]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:GenericValue">[new System.IO.FileInfo(fileName.ToString).Extension]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[fileExtn.ToString.ToLower = &quot;.zip&quot;]" sap:VirtualizedContainerService.HintSize="484,579" sap2010:WorkflowViewState.IdRef="If_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="418,402" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="376,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[fileExtn.ToString + &quot;saved, It will be processed later.&quot;]" />
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Guardar archivos adjuntos" Filter=".*(.zip|.ZIP)" FolderPath="[projectFilePath+&quot;ZIP&quot;]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_3" Message="[item]" />
                                  </Sequence>
                                </Sequence>
                              </If.Then>
                            </If>
                            <If Condition="[fileExtn.ToString.ToLower = &quot;.xml&quot;]" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[countXLMs]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[countXLMs + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <If Condition="[fileExtn.ToString.ToLower = &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_8">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[countPDFs]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[countPDFs + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                    <If sap2010:Annotation.AnnotationText="SI hay 1 o mas XMLs y 1 o mas PDFs se deben de guardar los adjuntos.&#xA;&#xA;SI NO es un correo que no procesara el bot." Condition="[countXLMs &gt;= 1 AND countPDFs &gt;= 1]" sap:VirtualizedContainerService.HintSize="790.4,3431.2" sap2010:WorkflowViewState.IdRef="If_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="755.2,3192" sap2010:WorkflowViewState.IdRef="Sequence_23">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:SaveMailAttachments Attachments="{x:Null}" sap2010:Annotation.AnnotationText="Guardo todos los adjuntos para trabajar con ellos y si hay alguno que no se va a utilizar, posteriormente se elimina." DisplayName="Guardar archivos adjuntos" FolderPath="[projectFilePath]" sap:VirtualizedContainerService.HintSize="713.6,148" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[item]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SaveMailAttachments>
                          <Assign sap2010:Annotation.AnnotationText="Variable que me va a indicar cuando el bot encuentra un XML que es parte del proceso, osea cuando son Facturas Electronicas o Notas de Credito." sap:VirtualizedContainerService.HintSize="713.6,136" sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[findValidXML]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <ui:ForEach x:TypeArguments="snm:Attachment" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For each para salvar el XML que es parte del proceso en el lugar indicado.&#xA;&#xA;Y si no se encuentra ninguno no se salva." DisplayName="For each attachment XML" sap:VirtualizedContainerService.HintSize="636.8,2331.2" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[item.Attachments]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="snm:Attachment">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="snm:Attachment" Name="attachment" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="601.6,2136.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="ui:GenericValue" Name="fileName" />
                                    <Variable x:TypeArguments="ui:GenericValue" Name="fileExtn" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:GenericValue">[fileName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:GenericValue">[attachment.Name]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:GenericValue">[fileExtn]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:GenericValue">[new System.IO.FileInfo(fileName.ToString).Extension]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[fileExtn.ToString.ToLower = &quot;.xml&quot;]" sap:VirtualizedContainerService.HintSize="560,1844" sap2010:WorkflowViewState.IdRef="If_2">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="524.8,1664.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Type Of Doc From XLM" sap:VirtualizedContainerService.HintSize="483.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Generales\Get_TypeOfDocument_FromXLM.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_xmlFilePath">[projectFilePath+fileName]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="out_xmlDocType">[xmlDocType]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <If sap2010:Annotation.AnnotationText="SI el XML es una Nota de Credito o una Factura Electronica es un documento que se debe guardar y procesar.&#xA;&#xA;SI NO el documento no se ocupa." Condition="[xmlDocType.Equals(&quot;NotaCreditoElectronica&quot;) OR xmlDocType.Equals(&quot;FacturaElectronica&quot;)]" sap:VirtualizedContainerService.HintSize="483.2,1418.4" sap2010:WorkflowViewState.IdRef="If_10">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="425.6,1163.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[findValidXML]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[xmlValidName]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[fileName.Replace(fileExtn, "")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Receptor ID From XLM" sap:VirtualizedContainerService.HintSize="384,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Generales\Get_ID_FromXML.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_xmlFilePath">[projectFilePath+fileName]</InArgument>
                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_xmlReceptorID">[xmlReceptorID]</OutArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <If sap2010:Annotation.AnnotationText="Obtener el Path de la carpeta indicada segun la Cedula del Receptor." Condition="[xmlReceptorID.Equals(&quot;3101280316&quot;)]" sap:VirtualizedContainerService.HintSize="1181.6,568.8" sap2010:WorkflowViewState.IdRef="If_12">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Assign DisplayName="Assign correct path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[filesDestinationFolder]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[projectFilePath+"XML\AIMI CONSOLIDACIONES\"]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Then>
                                                <If.Else>
                                                  <If Condition="[xmlReceptorID.Equals(&quot;3101179539&quot;)]" sap:VirtualizedContainerService.HintSize="875.2,378.4" sap2010:WorkflowViewState.IdRef="If_11">
                                                    <If.Then>
                                                      <Assign DisplayName="Assign correct path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[filesDestinationFolder]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[projectFilePath+"XML\AIMI LOGISTICA\"]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Then>
                                                    <If.Else>
                                                      <If Condition="[xmlReceptorID.Equals(&quot;3101401138&quot;)]" sap:VirtualizedContainerService.HintSize="568.8,219.2" sap2010:WorkflowViewState.IdRef="If_13">
                                                        <If.Then>
                                                          <Assign DisplayName="Assign correct path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[filesDestinationFolder]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[projectFilePath+"XML\C807\"]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Assign DisplayName="Assign correct path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[filesDestinationFolder]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[projectFilePath+"XML\Otros\"]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Else>
                                                      </If>
                                                    </If.Else>
                                                  </If>
                                                </If.Else>
                                              </If>
                                              <Sequence DisplayName="Create Folders" sap:VirtualizedContainerService.HintSize="384,68.8" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_5" Path="[filesDestinationFolder]" PathType="Folder" />
                                                <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_50">
                                                  <If.Then>
                                                    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[filesDestinationFolder]" />
                                                  </If.Then>
                                                </If>
                                                <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_10" Path="[&quot;C:\&quot; +filesDestinationFolder]" PathType="Folder" />
                                                <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_55">
                                                  <If.Then>
                                                    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_10" Path="[&quot;C:\&quot; +filesDestinationFolder]" />
                                                  </If.Then>
                                                </If>
                                                <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_11" Path="[filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)]" PathType="Folder" />
                                                <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_56">
                                                  <If.Then>
                                                    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_11" Path="[filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)]" />
                                                  </If.Then>
                                                </If>
                                                <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_12" Path="[&quot;C:\&quot; + filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)]" PathType="Folder" />
                                                <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="483.2,260" sap2010:WorkflowViewState.IdRef="If_57">
                                                  <If.Then>
                                                    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_12" Path="[&quot;C:\&quot; + filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)]" />
                                                  </If.Then>
                                                </If>
                                              </Sequence>
                                              <ui:MoveFile ContinueOnError="{x:Null}" Destination="[filesDestinationFolder+xmlValidName+fileExtn.ToString().ToLower()]" DisplayName="Move XML File" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True" Path="[projectFilePath+fileName]" />
                                              <Assign sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ValidXMLPath]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[filesDestinationFolder+xmlValidName+fileExtn.ToString().ToLower()]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="384,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[fileExtn.ToString + &quot; saved.&quot;]" />
                                              <ui:Break sap:VirtualizedContainerService.HintSize="384,22.4" sap2010:WorkflowViewState.IdRef="Break_2" />
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                          <If sap2010:Annotation.AnnotationText="SI entre los XML analizados se encontro uno que es procesable y se guardo, se buscara el PDF de este XML.&#xA;&#xA;SI NO no se busca un PDF.&#xA;" Condition="[findValidXML.Equals(True)]" sap:VirtualizedContainerService.HintSize="713.6,2142.4" sap2010:WorkflowViewState.IdRef="If_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="678.4,1887.2" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="636.8,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ForEach x:TypeArguments="snm:Attachment" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For each para salvar el PDF correcto." DisplayName="For each attachment PDF" sap:VirtualizedContainerService.HintSize="636.8,1694.4" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[item.Attachments]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="snm:Attachment">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="snm:Attachment" Name="attachment" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="601.6,1528.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="ui:GenericValue" Name="fileName" />
                                          <Variable x:TypeArguments="ui:GenericValue" Name="fileExtn" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[fileName]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:GenericValue">[attachment.Name]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[fileExtn]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:GenericValue">[new System.IO.FileInfo(fileName.ToString).Extension]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <If Condition="[fileExtn.ToString.ToLower = &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="560,1236" sap2010:WorkflowViewState.IdRef="If_14">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="524.8,1056.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If sap2010:Annotation.AnnotationText="SI solo hay un PDF entre los adjuntos ese es el que pertenece al XML anteriormente guardado.&#xA;&#xA;SI NO hay que buscar el PDF con el mismo nombre que el del XML." Condition="[countPDFs.Equals(1)]" sap:VirtualizedContainerService.HintSize="483.2,192.8" sap2010:WorkflowViewState.IdRef="If_15">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Then>
                                                <If.Else>
                                                  <If Condition="[fileName.Replace(fileExtn, &quot;&quot;).Equals(xmlValidName)]" sap:VirtualizedContainerService.HintSize="1179.2,1050.4" sap2010:WorkflowViewState.IdRef="If_16">
                                                    <If.Then>
                                                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="872.8,891.2" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="x:String" Name="xmlInvNumber" />
                                                          <Variable x:TypeArguments="x:String" Name="xmlClave" />
                                                        </Sequence.Variables>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="831.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Generales\Get_Clave_fromXML.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_xmlFilePath">[Path.GetFullPath(ValidXMLPath)]</InArgument>
                                                            <OutArgument x:TypeArguments="x:String" x:Key="out_xmlClave">[xmlClave]</OutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <If Condition="[fileName.Contains(xmlClave)]" sap:VirtualizedContainerService.HintSize="831.2,644.8" sap2010:WorkflowViewState.IdRef="If_62">
                                                          <If.Then>
                                                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence sap:VirtualizedContainerService.HintSize="524.8,485.6" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="483.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Generales\Get_InvNumber_fromXML.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="in_xmlFilePath">[Path.GetFullPath(ValidXMLPath)]</InArgument>
                                                                  <OutArgument x:TypeArguments="x:String" x:Key="out_xmlInvNumber">[xmlInvNumber]</OutArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                              <If Condition="[fileName.Contains(xmlInvNumber)]" sap:VirtualizedContainerService.HintSize="483.2,239.2" sap2010:WorkflowViewState.IdRef="If_63">
                                                                <If.Then>
                                                                  <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </If.Then>
                                                              </If>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </If.Else>
                                              </If>
                                              <If sap2010:Annotation.AnnotationText="SI ya encontre el PDF correcto, se guarda.&#xA;&#xA;SI NO continuar buscandolo." Condition="[isCorrectPDF.Equals(True)]" sap:VirtualizedContainerService.HintSize="483.2,731.2" sap2010:WorkflowViewState.IdRef="If_17">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence sap2010:Annotation.AnnotationText="Salva el PDF&#xA;" sap:VirtualizedContainerService.HintSize="425.6,492" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:MoveFile ContinueOnError="{x:Null}" Destination="[filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)+xmlValidName+fileExtn.ToString().ToLower()]" DisplayName="Move XML File" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_10" Overwrite="True" Path="[projectFilePath+fileName]" />
                                                    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="384,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[fileExtn.ToString.ToLower() + &quot; saved.&quot;]" />
                                                    <ui:Break sap:VirtualizedContainerService.HintSize="384,22.4" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                  </Sequence>
                                                </If.Then>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEach>
                              </Sequence>
                            </If.Then>
                          </If>
                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Elminar aquellos archivos que no son parte del proceso. En ...\ArchivosBot1\" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="713.6,352" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[Directory.getFiles(projectFilePath,&quot;*&quot;)]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="324.8,173.6" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[file.ToString()]" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="993.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Processing ZIP files...&quot;]" />
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Ahora el bot va a extraer, clasificar y salvar los archivos procesables que venian en un un .ZIP" DisplayName="For Each ZIP file" sap:VirtualizedContainerService.HintSize="993.6,2581.6" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[Directory.getFiles(projectFilePath+&quot;ZIP\&quot;,&quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="zipFile" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="601.6,2416" sap2010:WorkflowViewState.IdRef="Sequence_33">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uascw:ExtractFiles DestinationFolderInfo="{x:Null}" Password="{x:Null}" sap2010:Annotation.AnnotationText="Extraer el contenido del ZIP en otra carpeta temporal ubicada en ...\ArchivosBot1\ZIP\Extraido\ para realizar un ciclo sobre esa carpeta y analizar cada archivo." CodePage="Default" DestinationFolder="[projectFilePath+&quot;ZIP\Extraido\&quot;]" DisplayName="Extract/Unzip Files" ExtractToADedicatedFolder="False" FileToExtract="[zipFile.ToString()]" sap:VirtualizedContainerService.HintSize="560,268.8" sap2010:WorkflowViewState.IdRef="ExtractFiles_1" SkipUnsupportedFiles="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uascw:ExtractFiles>
            <Assign DisplayName="Reset Counter of XLM to 0" sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_31">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[countXLMs]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Reset Counter of PDF to 0" sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_32">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[countPDFs]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Contar la cantidad de archivos XMLs y PDFs que se encuentran en la carpeta." DisplayName="For Each file" sap:VirtualizedContainerService.HintSize="560,112.8" sap2010:WorkflowViewState.IdRef="ForEach`1_17" Values="[Directory.getFiles(projectFilePath+&quot;ZIP\Extraido\&quot;,&quot;*&quot;)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,748" sap2010:WorkflowViewState.IdRef="Sequence_37">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="ui:GenericValue" Name="fileName" />
                      <Variable x:TypeArguments="ui:GenericValue" Name="fileExtn" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[fileName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[file.ToString().Replace(projectFilePath+"ZIP\Extraido\", "")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[fileExtn]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[new System.IO.FileInfo(fileName.ToString).Extension]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[fileExtn.ToString.ToLower = &quot;.xml&quot;]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[countXLMs]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[countXLMs + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                    <If Condition="[fileExtn.ToString.ToLower = &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_24">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[countPDFs]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[countPDFs + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If sap2010:Annotation.AnnotationText="SI hay 1 o mas XMLs y 1 o mas PDFs se deben de guardar los adjuntos.&#xA;&#xA;SI NO es un archivo zip que no procesara el bot." Condition="[countXLMs &gt;= 1 AND countPDFs &gt;= 1]" sap:VirtualizedContainerService.HintSize="560,1269.6" sap2010:WorkflowViewState.IdRef="If_45">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="524.8,1030.4" sap2010:WorkflowViewState.IdRef="Sequence_54">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap2010:Annotation.AnnotationText="Variable que me va a indicar cuando el bot encuentra un XML que es parte del proceso, osea cuando son Facturas Electronicas o Notas de Credito." sap:VirtualizedContainerService.HintSize="483.2,136" sap2010:WorkflowViewState.IdRef="Assign_60">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[findValidXML]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For each para salvar el XML que es parte del proceso en el lugar indicado.&#xA;&#xA;Y si no se encuentra ninguno no se salva." DisplayName="For each file XML" sap:VirtualizedContainerService.HintSize="483.2,160.8" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[Directory.getFiles(projectFilePath+&quot;ZIP\Extraido\&quot;,&quot;*&quot;)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1376.8,2576.8" sap2010:WorkflowViewState.IdRef="Sequence_48">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="ui:GenericValue" Name="fileName" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="fileExtn" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="1335.2,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[fileName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[file.ToString().Replace(projectFilePath+"ZIP\Extraido\", "")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="1335.2,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[fileExtn]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[new System.IO.FileInfo(fileName.ToString).Extension]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[fileExtn.ToString.ToLower = &quot;.xml&quot;]" sap:VirtualizedContainerService.HintSize="1335.2,2284" sap2010:WorkflowViewState.IdRef="If_39">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="1300,2104.8" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Type Of Doc From XLM" sap:VirtualizedContainerService.HintSize="1258.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Generales\Get_TypeOfDocument_FromXLM.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_xmlFilePath">[projectFilePath+"ZIP\Extraido\"+fileName]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_xmlDocType">[xmlDocType]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <If sap2010:Annotation.AnnotationText="SI el XML es una Nota de Credito o una Factura Electronica es un documento que se debe guardar y procesar.&#xA;&#xA;SI NO el documento no se ocupa." Condition="[xmlDocType.Equals(&quot;NotaCreditoElectronica&quot;) OR xmlDocType.Equals(&quot;FacturaElectronica&quot;)]" sap:VirtualizedContainerService.HintSize="1258.4,1858.4" sap2010:WorkflowViewState.IdRef="If_38">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="1223.2,1619.2" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="1181.6,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[findValidXML]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="1181.6,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[xmlValidName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[fileName.Replace(fileExtn, "")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Receptor ID From XLM" sap:VirtualizedContainerService.HintSize="1181.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Generales\Get_ID_FromXML.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_xmlFilePath">[projectFilePath+"ZIP\Extraido\"+fileName]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_xmlReceptorID">[xmlReceptorID]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <If sap2010:Annotation.AnnotationText="Obtener el Path de la carpeta indicada segun la Cedula del Receptor." Condition="[xmlReceptorID.Equals(&quot;3101280316&quot;)]" sap:VirtualizedContainerService.HintSize="1181.6,568.8" sap2010:WorkflowViewState.IdRef="If_37">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Assign DisplayName="Assign correct path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[filesDestinationFolder]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[projectFilePath+"XML\AIMI CONSOLIDACIONES\"]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <If Condition="[xmlReceptorID.Equals(&quot;3101179539&quot;)]" sap:VirtualizedContainerService.HintSize="875.2,378.4" sap2010:WorkflowViewState.IdRef="If_36">
                                            <If.Then>
                                              <Assign DisplayName="Assign correct path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[filesDestinationFolder]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[projectFilePath+"XML\AIMI LOGISTICA\"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <If Condition="[xmlReceptorID.Equals(&quot;3101401138&quot;)]" sap:VirtualizedContainerService.HintSize="568.8,219.2" sap2010:WorkflowViewState.IdRef="If_35">
                                                <If.Then>
                                                  <Assign DisplayName="Assign correct path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[filesDestinationFolder]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[projectFilePath+"XML\C807\"]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Then>
                                                <If.Else>
                                                  <Assign DisplayName="Assign correct path" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[filesDestinationFolder]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[projectFilePath+"XML\Otros\"]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Else>
                                              </If>
                                            </If.Else>
                                          </If>
                                        </If.Else>
                                      </If>
                                      <Sequence DisplayName="Create Folders" sap:VirtualizedContainerService.HintSize="1181.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_13" Path="[filesDestinationFolder]" PathType="Folder" />
                                        <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="484,256" sap2010:WorkflowViewState.IdRef="If_58">
                                          <If.Then>
                                            <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_13" Path="[filesDestinationFolder]" />
                                          </If.Then>
                                        </If>
                                        <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_14" Path="[&quot;C:\&quot; +filesDestinationFolder]" PathType="Folder" />
                                        <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="484,256" sap2010:WorkflowViewState.IdRef="If_59">
                                          <If.Then>
                                            <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_14" Path="[&quot;C:\&quot; +filesDestinationFolder]" />
                                          </If.Then>
                                        </If>
                                        <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_15" Path="[filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)]" PathType="Folder" />
                                        <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="484,256" sap2010:WorkflowViewState.IdRef="If_60">
                                          <If.Then>
                                            <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_15" Path="[filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)]" />
                                          </If.Then>
                                        </If>
                                        <ui:PathExists DisplayName="Path Exists" Exists="[FolderExists]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_16" Path="[&quot;C:\&quot; + filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)]" PathType="Folder" />
                                        <If Condition="[NOT FolderExists]" sap:VirtualizedContainerService.HintSize="484,256" sap2010:WorkflowViewState.IdRef="If_61">
                                          <If.Then>
                                            <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_16" Path="[&quot;C:\&quot; + filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)]" />
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[filesDestinationFolder + xmlValidName+fileExtn.ToString().ToLower()]" DisplayName="Move XML File" sap:VirtualizedContainerService.HintSize="1181.6,160" sap2010:WorkflowViewState.IdRef="MoveFile_13" Overwrite="True" Path="[projectFilePath+&quot;ZIP\Extraido\&quot;+fileName.ToString()]" />
                                      <Assign sap:VirtualizedContainerService.HintSize="1181.6,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[ValidXMLPath]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[filesDestinationFolder+xmlValidName+fileExtn.ToString().ToLower()]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1181.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[fileExtn.ToString + &quot; saved.&quot;]" />
                                      <ui:Break sap:VirtualizedContainerService.HintSize="1181.6,22.4" sap2010:WorkflowViewState.IdRef="Break_5" />
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <If sap2010:Annotation.AnnotationText="SI entre los XML analizados se encontro uno que es procesable y se guardo, se buscara el PDF de este XML.&#xA;&#xA;SI NO no se busca un PDF.&#xA;" Condition="[findValidXML.Equals(True)]" sap:VirtualizedContainerService.HintSize="483.2,560.8" sap2010:WorkflowViewState.IdRef="If_44">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,289.6" sap2010:WorkflowViewState.IdRef="Sequence_52">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For each para salvar el PDF correcto." DisplayName="For each file PDF" sap:VirtualizedContainerService.HintSize="262.4,96.8" sap2010:WorkflowViewState.IdRef="ForEach`1_21" Values="[Directory.getFiles(projectFilePath+&quot;ZIP\Extraido\&quot;,&quot;*&quot;)]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="601.6,1528.8" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="ui:GenericValue" Name="fileName" />
                                  <Variable x:TypeArguments="ui:GenericValue" Name="fileExtn" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:GenericValue">[fileName]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:GenericValue">[file.ToString().Replace(projectFilePath+"ZIP\Extraido\", "")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="560,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:GenericValue">[fileExtn]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:GenericValue">[new System.IO.FileInfo(fileName.ToString).Extension]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[fileExtn.ToString.ToLower = &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="560,1236" sap2010:WorkflowViewState.IdRef="If_43">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="524.8,1056.8" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If sap2010:Annotation.AnnotationText="SI solo hay un PDF entre los adjuntos ese es el que pertenece al XML anteriormente guardado.&#xA;&#xA;SI NO hay que buscar el PDF con el mismo nombre que el del XML." Condition="[countPDFs.Equals(1)]" sap:VirtualizedContainerService.HintSize="483.2,192.8" sap2010:WorkflowViewState.IdRef="If_41">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <If Condition="[fileName.Replace(fileExtn, &quot;&quot;).Equals(xmlValidName)]" sap:VirtualizedContainerService.HintSize="1179.2,1050.4" sap2010:WorkflowViewState.IdRef="If_40">
                                            <If.Then>
                                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="872.8,891.2" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="xmlInvNumber" />
                                                  <Variable x:TypeArguments="x:String" Name="xmlClave" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="831.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Generales\Get_Clave_fromXML.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_xmlFilePath">[Path.GetFullPath(ValidXMLPath)]</InArgument>
                                                    <OutArgument x:TypeArguments="x:String" x:Key="out_xmlClave">[xmlClave]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <If Condition="[fileName.Contains(xmlClave)]" sap:VirtualizedContainerService.HintSize="831.2,644.8" sap2010:WorkflowViewState.IdRef="If_65">
                                                  <If.Then>
                                                    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="524.8,485.6" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="483.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Generales\Get_InvNumber_fromXML.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="x:String" x:Key="in_xmlFilePath">[Path.GetFullPath(ValidXMLPath)]</InArgument>
                                                          <OutArgument x:TypeArguments="x:String" x:Key="out_xmlInvNumber">[xmlInvNumber]</OutArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                      <If Condition="[fileName.Contains(xmlInvNumber)]" sap:VirtualizedContainerService.HintSize="483.2,239.2" sap2010:WorkflowViewState.IdRef="If_64">
                                                        <If.Then>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">[isCorrectPDF]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Then>
                                                      </If>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </If.Else>
                                      </If>
                                      <If sap2010:Annotation.AnnotationText="SI ya encontre el PDF correcto, se guarda.&#xA;&#xA;SI NO continuar buscandolo." Condition="[isCorrectPDF.Equals(True)]" sap:VirtualizedContainerService.HintSize="483.2,731.2" sap2010:WorkflowViewState.IdRef="If_42">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap2010:Annotation.AnnotationText="Salva el PDF&#xA;" sap:VirtualizedContainerService.HintSize="425.6,492" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:MoveFile ContinueOnError="{x:Null}" Destination="[filesDestinationFolder.Replace(&quot;XML&quot;, &quot;PDF&quot;)+xmlValidName+fileExtn.ToLower()]" DisplayName="Move XML File" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_14" Overwrite="True" Path="[projectFilePath+&quot;ZIP\Extraido\&quot;+fileName.ToString()]" />
                                            <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="384,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[fileExtn.ToString.ToLower() + &quot; saved.&quot;]" />
                                            <ui:Break sap:VirtualizedContainerService.HintSize="384,22.4" sap2010:WorkflowViewState.IdRef="Break_6" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Elminar aquellos archivos que no son parte del proceso. En ...\ArchivosBot1\ZIP\Extraido\" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="560,352" sap2010:WorkflowViewState.IdRef="ForEach`1_22" Values="[Directory.getFiles(projectFilePath+&quot;ZIP\Extraido\&quot;,&quot;*&quot;)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="324.8,173.6" sap2010:WorkflowViewState.IdRef="Sequence_53">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[file.ToString()]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Elminar aquellos archivos que no son parte del proceso. En ...\ArchivosBot1\ZIP\" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="993.6,352" sap2010:WorkflowViewState.IdRef="ForEach`1_23" Values="[Directory.getFiles(projectFilePath+&quot;ZIP\&quot;,&quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="324.8,173.6" sap2010:WorkflowViewState.IdRef="Sequence_55">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[file.ToString()]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:CommentOut DisplayName="Comentar" sap:VirtualizedContainerService.HintSize="993.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_6">
      <ui:CommentOut.Body>
        <Sequence sap:VirtualizedContainerService.HintSize="496,825.6" sap2010:WorkflowViewState.IdRef="Sequence_60">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Actividades ignoradas" sap:VirtualizedContainerService.HintSize="454,602" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InterruptibleDoWhile Condition="[i&lt;100]" DisplayName="Hacer mientras" sap:VirtualizedContainerService.HintSize="412,510" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
              <ui:InterruptibleDoWhile.Body>
                <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="376,345" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Delay DisplayName="Retraso" Duration="00:03:00" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                  <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Procesando correo  &quot; + i.ToString + &quot;%&quot;]" />
                  <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[i +1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ui:InterruptibleDoWhile.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleDoWhile>
          </Sequence>
          <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="454,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[MailMessages.Count.ToString]" />
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>